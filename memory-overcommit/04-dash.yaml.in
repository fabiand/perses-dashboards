- kind: Dashboard
  metadata:
    name: memory-overcommit
    project: {{PROJECT}}
  spec:
    display:
        name: Memory overcommit
    variables:
        - kind: ListVariable
          spec:
            display:
                name: Node
                hidden: false
            defaultValue: $__all
            allowAllValue: true
            allowMultiple: false
            customAllValue: .*
            sort: alphabetical-ci-asc
            plugin:
                kind: PrometheusLabelValuesVariable
                spec:
                    datasource:
                        kind: PrometheusDatasource
                        name: default
                    labelName: node
            name: node
    panels:
        OverCommitLevel:
            kind: Panel
            spec:
                display:
                    name: Virtual Overcommit Level
                    description: Overcommit ratio based on the current utilization and allocated virtual memory to VMs
                plugin:
                    kind: GaugeChart
                    spec:
                        calculation: last-number
                        format:
                            decimalPlaces: 1
                            unit: percent-decimal
                        max: 2
                        thresholds:
                            steps:
                                - value: 0.8
                                - color: '#EE6C6C'
                                  value: 1.2
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    (
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                    -
                                    (
                                    sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    -
                                    sum(kube_node_status_allocatable{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    )
                                    +
                                    sum(kubevirt_vmi_memory_domain_bytes{node=~"$node"})
                                    )

                                    /

                                    (
                                    sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    )
                                seriesNameFormat: Virtual Overcomit Level
        Pressure:
            kind: Panel
            spec:
                display:
                    name: Pressure
                    description: The pressure is indicating if workloads are waiting for memory.
                plugin:
                    kind: StatChart
                    spec:
                        calculation: last-number
                        format:
                            shortValues: true
                            unit: decimal
                        mappings:
                            - kind: Range
                              spec:
                                from: 1
                                result:
                                    color: '#FFCC00'
                                    value: ""
                                to: 5
                            - kind: Range
                              spec:
                                from: 5
                                result:
                                    color: '#FF9F1C'
                                    value: ""
                                to: 7
                            - kind: Range
                              spec:
                                from: 7
                                result:
                                    color: '#EA4747'
                                    value: ""
                        sparkline: {}
                        thresholds:
                            steps:
                                - value: 1
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: sum(rate(node_pressure_memory_waiting_seconds_total{instance=~"$node"}[1m]))
                                seriesNameFormat: Waiting
        Utilization:
            kind: Panel
            spec:
                display:
                    name: Physical memory utilization & requests
                    description: This is showing the total system utilization (split between virt and non virt workloads). In addition the current plan (requests) are shown in order to to show how much available memory the scheduler is seeing.
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        querySettings:
                            - colorMode: fixed
                              colorValue: '#555'
                              queryIndex: 0
                            - colorMode: fixed
                              colorValue: '#EE6C6C'
                              queryIndex: 1
                            - colorMode: fixed
                              colorValue: '#643535'
                              queryIndex: 2
                            - colorMode: fixed
                              colorValue: '#32466d'
                              queryIndex: 3
                        yAxis:
                            format:
                                unit: bytes
                            label: ""
                            min: 0
                            show: true
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                seriesNameFormat: Node memory capacity
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                seriesNameFormat: Node memory utilization (with virt)
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                    -
                                    sum(kubevirt_vmi_memory_used_bytes{node=~"$node"})
                                seriesNameFormat: Node memory utilization (without virt)
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    (
                                    sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    -
                                    sum(kube_node_status_allocatable{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    )
                                    +
                                    sum(kube_pod_resource_request{resource="memory", node=~"$node"})
                                seriesNameFormat: Memory requests
        UtilizationDsitribution:
            kind: Panel
            spec:
                display:
                    name: Utilization Dsitribution
                plugin:
                    kind: TimeSeriesChart
                    spec: {}
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: avg(kubevirt_vmi_memory_used_bytes{node=~"$node"})
                                seriesNameFormat: avg
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: max(kubevirt_vmi_memory_used_bytes{node=~"$node"})
                                seriesNameFormat: max
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: min(kubevirt_vmi_memory_used_bytes{node=~"$node"})
                                seriesNameFormat: min
        UtilizationOverCommitLevel:
            kind: Panel
            spec:
                display:
                    name: Actual Overcommit Level
                    description: Overcommit level based on the current utilization of the cluster
                plugin:
                    kind: GaugeChart
                    spec:
                        calculation: last-number
                        format:
                            decimalPlaces: 1
                            unit: percent-decimal
                        thresholds:
                            steps:
                                - value: 0.8
                                - color: '#EE6C6C'
                                  value: 0.9
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    (
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                    )

                                    /

                                    (
                                    sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    )
                                seriesNameFormat: Actual Overcommit Level
        Virtualmemoryallocation:
            kind: Panel
            spec:
                display:
                    name: Virtual Memory assignment
                    description: The virtual memory assignment is showing the worst-case scenario if all virtual memory was used right now. The assigned virtual memory is shown on top of the non virtualization related memory utilization. The current utiliztaion plus worst-case virtual memory utilization is indiacting the worst case memor overcommittment.
                plugin:
                    kind: TimeSeriesChart
                    spec:
                        legend:
                            position: bottom
                        querySettings:
                            - colorMode: fixed
                              colorValue: '#555'
                              queryIndex: 0
                            - colorMode: fixed
                              colorValue: '#FFCC00'
                              queryIndex: 1
                            - colorMode: fixed
                              colorValue: '#7c6400'
                              queryIndex: 2
                        thresholds:
                            mode: percent
                            steps: []
                        visual:
                            areaOpacity: 0
                            connectNulls: false
                            display: line
                            lineWidth: 1.25
                            pointRadius: 2.75
                        yAxis:
                            format:
                                unit: bytes
                            label: ""
                            min: 0
                            show: true
                queries:
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                minStep: ""
                                query: sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                seriesNameFormat: Node capacity
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                    -
                                    (
                                    sum(kube_node_status_capacity{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    -
                                    sum(kube_node_status_allocatable{resource="memory", node=~"$node"} * on (node) kube_node_role{role="worker", node=~"$node"})
                                    )
                                    +
                                    sum(kubevirt_vmi_memory_domain_bytes{node=~"$node"})
                                seriesNameFormat: VM assigned virtual memory
                    - kind: TimeSeriesQuery
                      spec:
                        plugin:
                            kind: PrometheusTimeSeriesQuery
                            spec:
                                query: |-
                                    sum(node_memory_MemTotal_bytes{instance=~"$node"})
                                    -
                                    sum(node_memory_MemAvailable_bytes{instance=~"$node"})
                                    -
                                    sum(kubevirt_vmi_memory_used_bytes{node=~"$node"})
                                seriesNameFormat: Node memory utilization (without virt)
    layouts:
        - kind: Grid
          spec:
            display:
                title: Memory
                collapse:
                    open: true
            items:
                - x: 0
                  "y": 0
                  width: 14
                  height: 7
                  content:
                    $ref: '#/spec/panels/Virtualmemoryallocation'
                - x: 14
                  "y": 0
                  width: 4
                  height: 7
                  content:
                    $ref: '#/spec/panels/OverCommitLevel'
                - x: 0
                  "y": 7
                  width: 14
                  height: 7
                  content:
                    $ref: '#/spec/panels/Utilization'
                - x: 14
                  "y": 7
                  width: 4
                  height: 7
                  content:
                    $ref: '#/spec/panels/UtilizationOverCommitLevel'
                - x: 0
                  "y": 14
                  width: 14
                  height: 3
                  content:
                    $ref: '#/spec/panels/Pressure'
        - kind: Grid
          spec:
            display:
                title: DRAFT Cluster
                collapse:
                    open: true
            items:
                - x: 0
                  "y": 0
                  width: 14
                  height: 6
                  content:
                    $ref: '#/spec/panels/UtilizationDsitribution'
    duration: 1h

