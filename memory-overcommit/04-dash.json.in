{
  "kind": "Dashboard",
  "metadata": {
    "name": "memory-overcommit",
    "project": "{{PROJECT}}"
  },
  "spec": {
    "display": {
      "name": "Memory overcommit"
    },
    "variables": [
      {
        "kind": "ListVariable",
        "spec": {
          "display": {
            "name": "Node",
            "hidden": false
          },
          "defaultValue": "$__all",
          "allowAllValue": true,
          "allowMultiple": false,
          "customAllValue": ".*",
          "sort": "alphabetical-ci-asc",
          "plugin": {
            "kind": "PrometheusLabelValuesVariable",
            "spec": {
              "datasource": {
                "kind": "PrometheusDatasource",
                "name": "default"
              },
              "labelName": "node"
            }
          },
          "name": "node"
        }
      },
      {
        "kind": "TextVariable",
        "spec": {
          "display": {
            "name": "role",
            "hidden": true
          },
          "value": "worker",
          "name": "role"
        }
      }
    ],
    "panels": {
      "ClusterPressure": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Cluster - Memory Pressure",
            "description": "The pressure is indicating if workloads are waiting for memory."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "thresholds": {
                "steps": [
                  {
                    "value": 2
                  },
                  {
                    "color": "#FF9F1C",
                    "value": 4
                  },
                  {
                    "color": "#EA4747",
                    "value": 6
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(node_pressure_memory_waiting_seconds_total{instance=~\"$node\"}[1m]))",
                    "seriesNameFormat": "Waiting"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum(rate(node_pressure_memory_stalled_seconds_total{instance=~\"$node\"}[1m]))",
                    "seriesNameFormat": "Stalled"
                  }
                }
              }
            }
          ]
        }
      },
      "ClusterUtilizationHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Physical memory utilization & requests",
            "description": "This is showing the total system utilization (split between virt and non virt workloads). In addition the current plan (requests) are shown in order to to show how much available memory the scheduler is seeing."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "querySettings": [
                {
                  "colorMode": "fixed",
                  "colorValue": "#8f8fff",
                  "queryIndex": 0
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#EE6C6C",
                  "queryIndex": 1
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#643535",
                  "queryIndex": 2
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#FFCC00",
                  "queryIndex": 3
                }
              ],
              "yAxis": {
                "format": {
                  "unit": "bytes"
                },
                "label": "",
                "min": 0,
                "show": true
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "{{kube_node_status_capacity_memory:sum}}",
                    "seriesNameFormat": "Node memory capacity"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum({{node_memory_MemNotAvailable_bytes}})",
                    "seriesNameFormat": "Utilization - Node memory utilization (with virt)"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum({{node_memory_MemNotAvailable_bytes}}) - sum(kubevirt_vmi_memory_used_bytes{node=~\"$node\"})",
                    "seriesNameFormat": "Utilization - Node memory utilization (without virt)"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(\n{{kube_node_status_capacity_memory:sum}}\n-\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n+\nsum(kube_pod_resource_request{resource=\"memory\", node=~\"$node\"})",
                    "seriesNameFormat": "Plan - Memory requests"
                  }
                }
              }
            }
          ]
        }
      },
      "ClusterUtilizationHistorySummary": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Cluster Utilization",
            "description": "The virtual memory assignment is showing the worst-case scenario if all virtual memory was used right now. The assigned virtual memory is shown on top of the non virtualization related memory utilization. The current utiliztaion plus worst-case virtual memory utilization is indiacting the worst case memor overcommittment."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "querySettings": [
                {
                  "colorMode": "fixed",
                  "colorValue": "#8f8fff",
                  "queryIndex": 0
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#FFCC00",
                  "queryIndex": 1
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#EE6C6C",
                  "queryIndex": 2
                }
              ],
              "thresholds": {
                "mode": "percent",
                "steps": []
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1.25,
                "pointRadius": 2.75
              },
              "yAxis": {
                "format": {
                  "unit": "bytes"
                },
                "label": "",
                "min": 0,
                "show": true
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "sum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})",
                    "seriesNameFormat": "Cluster allocatable capacity"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "# all used - system reserved + plan vm\nsum({{node_memory_MemNotAvailable_bytes}})\n-\n( # system reserved\n{{kube_node_status_capacity_memory:sum}}\n-\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n+\nsum(kubevirt_vmi_memory_domain_bytes{node=~\"$node\"})",
                    "seriesNameFormat": "Plan - VM assigned virtual memory"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum((node_memory_MemTotal_bytes{instance=~\"$node\"} - node_memory_MemAvailable_bytes{instance=~\"$node\"}))",
                    "seriesNameFormat": "Utilization - Cluster memory utilization"
                  }
                }
              }
            }
          ]
        }
      },
      "ClusterUtilizationNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Cluster Utilization",
            "description": "Current aggregate utilization of the cluster"
          },
          "plugin": {
            "kind": "GaugeChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "percent-decimal"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 0.8
                  },
                  {
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(\nsum((node_memory_MemTotal_bytes{instance=~\"$node\"} - node_memory_MemAvailable_bytes{instance=~\"$node\"}))\n-\n(\n{{kube_node_status_capacity_memory:sum}}\n-\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n\n/\n\n(\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)",
                    "seriesNameFormat": "Physical Memory utilization"
                  }
                }
              }
            }
          ]
        }
      },
      "ClusterVirtualCommitedHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Virtual Memory assignment",
            "description": "The virtual memory assignment is showing the worst-case scenario if all virtual memory was used right now. The assigned virtual memory is shown on top of the non virtualization related memory utilization. The current utiliztaion plus worst-case virtual memory utilization is indiacting the worst case memor overcommittment."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "querySettings": [
                {
                  "colorMode": "fixed",
                  "colorValue": "#8f8fff",
                  "queryIndex": 0
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#FFCC00",
                  "queryIndex": 1
                },
                {
                  "colorMode": "fixed",
                  "colorValue": "#7c6400",
                  "queryIndex": 2
                }
              ],
              "thresholds": {
                "mode": "percent",
                "steps": []
              },
              "visual": {
                "areaOpacity": 0,
                "connectNulls": false,
                "display": "line",
                "lineWidth": 1.25,
                "pointRadius": 2.75
              },
              "yAxis": {
                "format": {
                  "unit": "bytes"
                },
                "label": "",
                "min": 0,
                "show": true
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "{{kube_node_status_capacity_memory:total}}",
                    "seriesNameFormat": "Node capacity"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum((node_memory_MemTotal_bytes{instance=~\"$node\"}) - node_memory_MemAvailable_bytes{instance=~\"$node\"}))\n-\n(\n{{kube_node_status_capacity_memory:sum}}\n-\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n+\nsum(kubevirt_vmi_memory_domain_bytes{node=~\"$node\"})",
                    "seriesNameFormat": "Plan - VM assigned virtual memory"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum((node_memory_MemTotal_bytes{instance=~\"$node\"}) - node_memory_MemAvailable_bytes{instance=~\"$node\"}))\n-\nsum(kubevirt_vmi_memory_used_bytes{node=~\"$node\"})",
                    "seriesNameFormat": "Utilization - Node memory utilization (without virt)"
                  }
                }
              }
            }
          ]
        }
      },
      "ClusterVirtualCommitedNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Cluster Virtual Commited",
            "description": "Commit ratio based on the current utilization and allocated virtual memory to VMs. Overcommit occurs whenever the values goes beyond 100%."
          },
          "plugin": {
            "kind": "GaugeChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "percent-decimal"
              },
              "max": 2,
              "thresholds": {
                "steps": [
                  {
                    "value": 1.2
                  },
                  {
                    "color": "#EA4747",
                    "value": 1.5
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(\nsum((node_memory_MemTotal_bytes{instance=~\"$node\"} - node_memory_MemAvailable_bytes{instance=~\"$node\"}))\n-\n(\n{{kube_node_status_capacity_memory:sum}}\n-\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n+\nsum(kubevirt_vmi_memory_domain_bytes{node=~\"$node\"})\n)\n\n/\n\n(\nsum(kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)",
                    "seriesNameFormat": "Virtual Memory committment"
                  }
                }
              }
            }
          ]
        }
      },
      "NodePressureHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node - Pressure"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "yAxis": {
                "format": {
                  "shortValues": true,
                  "unit": "decimal"
                },
                "label": "",
                "max": 2,
                "min": 0,
                "show": true
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum by (instance) (rate(node_pressure_memory_waiting_seconds_total{instance=~\"$node\"}[1m]))",
                    "seriesNameFormat": "{{instance}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodePressureMaxNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node Pressure - max"
          },
          "plugin": {
            "kind": "GaugeChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "decimalPlaces": 2,
                "unit": "percent-decimal"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 2
                  },
                  {
                    "value": 4
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 6
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "topk(1, (sum by (instance) (rate(node_pressure_memory_waiting_seconds_total{instance=~\"$node\"}[1m]@end()))))",
                    "seriesNameFormat": "{{instance}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeRequestsHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Plan - Pod requests per Node"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#FFB249",
                    "value": 0.8
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "sum by (node) (kube_pod_resource_request{resource=\"memory\", node=~\"$node\"})\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeRequestsMinmaxNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node requests - min/max"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "color": "#FF9F1C",
                    "value": 0.8
                  },
                  {
                    "color": "#EA4747",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "min(\nsum by (node) (kube_pod_resource_request{resource=\"memory\", node=~\"$node\"})\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)\n)",
                    "seriesNameFormat": "Min"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "max(\nsum by (node) (kube_pod_resource_request{resource=\"memory\", node=~\"$node\"})\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)\n)",
                    "seriesNameFormat": "Max"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeSystemExceedsReservationAlertNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "System exceeding reservation",
            "description": "This panel provides the number of nodes where the system - core hypervisor components - are exceeding the amount of memory that were reserved for it."
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#EE6C6C",
                    "value": 1
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "count by (alertname) (ALERTS{alertname=\"SystemMemoryExceedsReservation\"})",
                    "seriesNameFormat": "{{alertname}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeSystemReservedMinmaxHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Utilization - min/max"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "querySettings": [],
              "thresholds": {
                "steps": [
                  {
                    "color": "#EE6C6C",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "min (\n(\nsum by (node) (container_memory_rss{id=\"/system.slice\"})\n\n/ on (node)\n\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n)",
                    "seriesNameFormat": "min {{node}}"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "max(\nsum by (node) (container_memory_rss{id=\"/system.slice\"})\n\n/ on (node)\n\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n\n)",
                    "seriesNameFormat": "max {{node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeSystemReservedUtilizationHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Utilization - Utilization of reserved system memory",
            "description": "This graph is showing the utilization of the hypervisor system reserved memory. The utilization must stay below 100%, otherwise the hypervisor is using more memory for system processes then what was reserved. This is putting system processes at risk."
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 0.9
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 1
                  }
                ]
              },
              "yAxis": {
                "format": {
                  "unit": "percent-decimal"
                },
                "label": "",
                "show": true
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "minStep": "",
                    "query": "topk(5, (\nsum by (node) (container_memory_rss{id=\"/system.slice\"})\n\n/ on (node)\n\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n))",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeUtilizationHistory": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Utilization - Actual overcommit level"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "thresholds": {
                "steps": [
                  {
                    "color": "#FFB249",
                    "value": 0.8
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeUtilizationMaxNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node Utilization - max"
          },
          "plugin": {
            "kind": "GaugeChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "percent-decimal"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 0.7
                  },
                  {
                    "value": 0.8
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(max by () ((\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)\n))",
                    "seriesNameFormat": "Max"
                  }
                }
              }
            }
          ]
        }
      },
      "NodeUtilizationMinNow": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node Utilization"
          },
          "plugin": {
            "kind": "GaugeChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "percent-decimal"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 0.7
                  },
                  {
                    "value": 0.8
                  },
                  {
                    "color": "#EE6C6C",
                    "value": 0.9
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(min by () ((\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n\n/ on (node)\n\n(\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n)\n))",
                    "seriesNameFormat": "Min"
                  }
                }
              }
            }
          ]
        }
      },
      "PlanMinmax": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Node virtual - min/max"
          },
          "plugin": {
            "kind": "StatChart",
            "spec": {
              "calculation": "last-number",
              "format": {
                "unit": "decimal"
              },
              "sparkline": {},
              "thresholds": {
                "steps": [
                  {
                    "value": 1.2
                  },
                  {
                    "color": "#FF9F1C",
                    "value": 1.5
                  },
                  {
                    "color": "#EA4747",
                    "value": 2
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(min by () ((\n\n(\n(\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n+\nsum by (node) (kubevirt_vmi_memory_domain_bytes)\n)\n\n\n/\n\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n\n)))",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            },
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(max by () ((\n\n(\n(\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n+\nsum by (node) (kubevirt_vmi_memory_domain_bytes)\n)\n\n\n/\n\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})\n\n)))",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            }
          ]
        }
      },
      "UtilizationDsitribution": {
        "kind": "Panel",
        "spec": {
          "display": {
            "name": "Plan - Virtual memory overcommit level"
          },
          "plugin": {
            "kind": "TimeSeriesChart",
            "spec": {
              "legend": {
                "position": "bottom"
              },
              "thresholds": {
                "steps": [
                  {
                    "value": 1.2
                  },
                  {
                    "color": "#FF9F1C",
                    "value": 1.5
                  },
                  {
                    "color": "#EA4747",
                    "value": 2
                  }
                ]
              }
            }
          },
          "queries": [
            {
              "kind": "TimeSeriesQuery",
              "spec": {
                "plugin": {
                  "kind": "PrometheusTimeSeriesQuery",
                  "spec": {
                    "query": "(\n(\nlabel_replace((\n{{node_memory_MemNotAvailable_bytes}}), \"node\", \"$1\", \"instance\", \"(.+)\")\n- on (node)\n(\nsum by (node) (kube_node_status_capacity{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n-\nsum by (node) (kube_node_status_allocatable{resource=\"memory\", node=~\"$node\"} * on (node) kube_node_role{role=\"worker\", node=~\"$node\"})\n)\n)\n+\nsum by (node) (kubevirt_vmi_memory_domain_bytes)\n)\n\n\n/\n\n(kube_node_status_allocatable{resource=\"memory\"} * on (node) kube_node_role{role=\"worker\"})",
                    "seriesNameFormat": "{{node}}"
                  }
                }
              }
            }
          ]
        }
      }
    },
    "layouts": [
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "Summary",
            "collapse": {
              "open": true
            }
          },
          "items": [
            {
              "x": 0,
              "y": 0,
              "width": 10,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterUtilizationNow"
              }
            },
            {
              "x": 10,
              "y": 0,
              "width": 8,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterVirtualCommitedNow"
              }
            },
            {
              "x": 0,
              "y": 7,
              "width": 5,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/NodeUtilizationMinNow"
              }
            },
            {
              "x": 5,
              "y": 7,
              "width": 5,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/NodeUtilizationMaxNow"
              }
            },
            {
              "x": 15,
              "y": 7,
              "width": 3,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/NodeSystemExceedsReservationAlertNow"
              }
            },
            {
              "x": 10,
              "y": 7,
              "width": 5,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/NodePressureMaxNow"
              }
            },
            {
              "x": 0,
              "y": 14,
              "width": 18,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterUtilizationHistorySummary"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "Cluster",
            "collapse": {
              "open": false
            }
          },
          "items": [
            {
              "x": 0,
              "y": 0,
              "width": 14,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterUtilizationHistory"
              }
            },
            {
              "x": 14,
              "y": 0,
              "width": 7,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterUtilizationNow"
              }
            },
            {
              "x": 0,
              "y": 7,
              "width": 14,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterVirtualCommitedHistory"
              }
            },
            {
              "x": 14,
              "y": 7,
              "width": 7,
              "height": 7,
              "content": {
                "$ref": "#/spec/panels/ClusterVirtualCommitedNow"
              }
            },
            {
              "x": 0,
              "y": 14,
              "width": 14,
              "height": 5,
              "content": {
                "$ref": "#/spec/panels/ClusterPressure"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "Nodes",
            "collapse": {
              "open": false
            }
          },
          "items": [
            {
              "x": 0,
              "y": 0,
              "width": 14,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeUtilizationHistory"
              }
            },
            {
              "x": 14,
              "y": 0,
              "width": 4,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeUtilizationMinNow"
              }
            },
            {
              "x": 0,
              "y": 8,
              "width": 14,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeRequestsHistory"
              }
            },
            {
              "x": 14,
              "y": 16,
              "width": 4,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/PlanMinmax"
              }
            },
            {
              "x": 14,
              "y": 8,
              "width": 4,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeRequestsMinmaxNow"
              }
            },
            {
              "x": 0,
              "y": 16,
              "width": 14,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/UtilizationDsitribution"
              }
            },
            {
              "x": 0,
              "y": 24,
              "width": 14,
              "height": 6,
              "content": {
                "$ref": "#/spec/panels/NodePressureHistory"
              }
            },
            {
              "x": 14,
              "y": 24,
              "width": 4,
              "height": 6,
              "content": {
                "$ref": "#/spec/panels/NodePressureMaxNow"
              }
            }
          ]
        }
      },
      {
        "kind": "Grid",
        "spec": {
          "display": {
            "title": "System Reserved",
            "collapse": {
              "open": false
            }
          },
          "items": [
            {
              "x": 0,
              "y": 0,
              "width": 14,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeSystemReservedUtilizationHistory"
              }
            },
            {
              "x": 21,
              "y": 0,
              "width": 2,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeSystemExceedsReservationAlertNow"
              }
            },
            {
              "x": 14,
              "y": 0,
              "width": 7,
              "height": 8,
              "content": {
                "$ref": "#/spec/panels/NodeSystemReservedMinmaxHistory"
              }
            }
          ]
        }
      }
    ],
    "duration": "6h"
  }
}
